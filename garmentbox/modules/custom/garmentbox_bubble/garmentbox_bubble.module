<?php
/**
 * @file
 * Code for the Garment-box Bubble feature.
 */

include_once 'garmentbox_bubble.features.inc';

/**
 * Implements hook_view_pre_render().
 */
function garmentbox_bubble_views_pre_render(&$view) {
  if (empty($view->result)) {
    garmentbox_bubble_bubble_manager('view_' . $view->name . '_empty');
  }
}

/**
 * Get and set bubbles.
 */
function garmentbox_bubble_bubble_manager($id = NULL) {
  $cache = &drupal_static(__FUNCTION__, array());
  if ($id) {
    // Register the ID.
    $cache[$id] = TRUE;
    return;
  }

  if (!$cache) {
    return;
  }

  $ids = array_keys($cache);

  // Get all nodes with the given IDs
  $query = new EntityFieldQuery();
  $result = $query->entityCondition('entity_type', 'node')
    ->propertyCondition('type', 'bubble')
    ->fieldCondition('field_bubble_id', 'value', $ids, 'IN')
    ->execute();

  if (empty($result['node'])) {
    return;
  }

  $beautytips = array();
  // List of selectors that should be triggered to show their bubbles upon load.
  $settings = array('opened_selectors' => array());
  $nodes = node_load_multiple(array_keys($result['node']));
  foreach ($nodes as $node) {
    $wrapper = entity_metadata_wrapper('node', $node);

    $beautytip = array(
      'cssSelect' => $wrapper->field_css_selector->value(),
      'text' => $wrapper->body->value->value(),
      'trigger' => 'none',
    );

    switch ($wrapper->field_display_mode->value()) {
      case 'hover':
        $beautytip['trigger'] = 'hover';
        break;

      case 'open':
        $settings['opened_selectors'][] = $wrapper->field_css_selector->value();
        break;
    }

    $beautytips['garmentbox_bubble_' . $node->nid] = $beautytip;
  }

  beautytips_add_beautytips($beautytips);
  if (!empty($settings['opened_selectors'])) {
    drupal_add_js(array('garmentbox_bubble' => $settings), 'setting');
    drupal_add_js(drupal_get_path('module', 'garmentbox_bubble') . '/js/garmentbox_bubble.js', 'file');
  }
}

/**
 * Implements hook_page_build().
 */
function garmentbox_bubble_page_build(&$page) {
  garmentbox_bubble_bubble_manager();
}

/**
 * Implements hook_init().
 *
 * Add the general help bubbles to pages.
 */
function garmentbox_bubble_init() {
  // TODO: Add other pages that should have help bubbles.
  $node_pages = array('season/%');

  $node = menu_get_object();
  if (!$node) {
    $item = menu_get_item();

    foreach ($node_pages as $node_page) {
      if (substr($item['path'], 0, strlen($node_page)) == $node_page) {
        $node = $item['map'][1]->data;
        break;
      }
    }
  }
  if (empty($node)) {
    return;
  }

  garmentbox_bubble_bubble_manager($node->type . '_help');
}
